import matplotlib.pyplot as plt
import numpy as np
from sampler import *

N = 10000  # Sample numbers

# Plot the histogram of samples generated by a categorical distribution with probabilities [0.2,0.4,0.3,0.1]
ap = [0.1, 0.5, 0.2, 0.2]
categoricalList = []
for i in range(N):
    categoricalList.append(Categorical(ap).sample())
plt.hist(categoricalList, bins=[0, 1, 2, 3, 4], density=True)
plt.xlabel('Categories')
plt.ylabel('Probability')
plt.title('Categorical Distribution')
plt.show()

# Univariate normal distribution with mean of 5 and standard deviation of 2
mu = 5
sigma = 2
UnivariateNormalList = []
sample = UnivariateNormal(mu, sigma)
for _ in range(N):
    UnivariateNormalList.append(sample.sample())
plt.hist(UnivariateNormalList, 100, density=True)
plt.xlabel('Random Variable X')
plt.ylabel('Probability')
plt.title('Normal Distribution of N(5, 2)')
plt.grid(True)
plt.show()

# Produce a scatter plot of the samples for a 2-D Gaussian with mean at [2,3] and a covariance matrix [[1,0.5],[0.2,1]].
Mu = np.array([2, 3])
Sigma = np.array([[1, 0.5], [0.2, 1]])
MultiVariateNormal_x = []
MultiVariateNormal_y = []
for _ in range(N):
    sample = MultiVariateNormal(Mu, Sigma).sample()
    MultiVariateNormal_x.append(sample[0])
    MultiVariateNormal_y.append(sample[1])
plt.scatter(MultiVariateNormal_x, MultiVariateNormal_y, s=0.5)
plt.xlabel('Random Variable X')
plt.ylabel('Random Variable Y')
plt.title('2D Normal Distribution')
plt.show()

# Test mixture Model
ap_mix = np.array([0.25, 0.25, 0.25, 0.25])
Mu_mix = np.array([[1, 1], [1, -1], [-1, 1], [-1, -1]])
Sigma_mix = np.diag([1, 1])
num = 0
pm = []
for i in range(4):
    pm.append(MultiVariateNormal(Mu_mix[i], Sigma_mix))
for _ in range(N):
    mix = MixtureModel(ap_mix, pm).sample()
    if (mix[0]-0.1)**2 + (mix[1]-0.2)**2 < 1:
        num += 1
print(num/N)


